# Generated from {{ semantic.id }}
"""
{{ semantic.brief }}

Generated by WeaverGen from OpenTelemetry semantic conventions.
"""

from dataclasses import dataclass
from typing import Optional, Union
from enum import Enum


class HttpMethod(str, Enum):
    """HTTP request methods."""
    GET = "GET"
    POST = "POST"
    PUT = "PUT"
    DELETE = "DELETE"
    PATCH = "PATCH"
    HEAD = "HEAD"
    OPTIONS = "OPTIONS"


@dataclass
class HttpServerAttributes:
    """{{ semantic.brief }}"""
    
    # Required attributes
    http_request_method: HttpMethod
    http_response_status_code: int
    
    # Recommended attributes
    http_request_path: Optional[str] = None
    http_request_duration: Optional[float] = None
    
    def to_dict(self) -> dict:
        """Convert to OpenTelemetry attribute dictionary."""
        attrs = {
            "http.request.method": self.http_request_method.value,
            "http.response.status_code": self.http_response_status_code,
        }
        
        if self.http_request_path is not None:
            attrs["http.request.path"] = self.http_request_path
            
        if self.http_request_duration is not None:
            attrs["http.request.duration"] = self.http_request_duration
            
        return attrs
