groups:
  # AI Agent Base Definition
  - id: agent.ai
    type: span
    brief: AI agent using Pydantic AI with LLM reasoning
    attributes:
      - id: agent.ai.id
        type: string
        brief: Unique identifier for the AI agent
        requirement_level: required
        examples: ["agent-ceo-001", "agent-cpo-001", "agent-sm-001"]
      
      - id: agent.ai.model
        type: string
        brief: LLM model used by the agent
        requirement_level: required
        examples: ["qwen2.5-coder:7b", "llama3.2:latest", "gpt-4"]
      
      - id: agent.ai.provider
        type: string
        brief: LLM provider endpoint
        requirement_level: required
        examples: ["http://192.168.1.74:11434/v1", "https://api.openai.com/v1"]
      
      - id: agent.ai.role
        type:
          allow_custom_values: false
          members:
            - id: executive
              value: "executive"
              brief: C-level executive decision maker
            - id: chief_product_owner
              value: "chief_product_owner"
              brief: CPO managing product portfolio
            - id: release_train_engineer
              value: "release_train_engineer"
              brief: RTE coordinating release train
            - id: scrum_master
              value: "scrum_master"
              brief: Scrum Master facilitating team
            - id: product_owner
              value: "product_owner"
              brief: Product Owner managing backlog
            - id: team_member
              value: "team_member"
              brief: Development team member
        brief: Role of the AI agent in the organization
        requirement_level: required
      
      - id: agent.ai.system_prompt
        type: string
        brief: System prompt defining agent behavior
        requirement_level: required
        examples: ["You are the CEO making strategic decisions...", "You are a Scrum Master facilitating..."]
      
      - id: agent.ai.temperature
        type: double
        brief: LLM temperature for response variability
        requirement_level: optional
        examples: [0.7, 0.3, 0.9]
      
      - id: agent.ai.max_tokens
        type: int
        brief: Maximum tokens for agent response
        requirement_level: optional
        examples: [500, 1000, 2000]

  # Agent Decision Making
  - id: agent.decision
    type: span
    brief: AI agent making a decision with reasoning
    extends: agent.ai
    attributes:
      - id: agent.decision.type
        type:
          allow_custom_values: true
          members:
            - id: strategic
              value: "strategic"
              brief: Strategic business decision
            - id: financial
              value: "financial"
              brief: Budget or investment decision
            - id: technical
              value: "technical"
              brief: Technical architecture decision
            - id: process
              value: "process"
              brief: Process or methodology decision
            - id: personnel
              value: "personnel"
              brief: Team or staffing decision
        brief: Type of decision being made
        requirement_level: required
      
      - id: agent.decision.thinking_time_ms
        type: int
        brief: Time spent thinking/processing in milliseconds
        requirement_level: required
        examples: [5000, 30000, 120000]
      
      - id: agent.decision.confidence
        type: double
        brief: Agent's confidence in decision (0-1)
        requirement_level: recommended
        examples: [0.85, 0.95, 0.6]
      
      - id: agent.decision.reasoning
        type: string
        brief: Agent's reasoning for the decision
        requirement_level: required
        examples: ["Based on market analysis...", "Considering team velocity..."]
      
      - id: agent.decision.alternatives_considered
        type: string[]
        brief: Alternative options the agent considered
        requirement_level: optional
        examples: [["option_a", "option_b", "option_c"]]

  # Agent Analysis
  - id: agent.analysis
    type: span
    brief: AI agent analyzing data or situation
    extends: agent.ai
    attributes:
      - id: agent.analysis.subject
        type: string
        brief: What is being analyzed
        requirement_level: required
        examples: ["impediment", "velocity_trend", "roi_calculation", "team_performance"]
      
      - id: agent.analysis.data_points
        type: int
        brief: Number of data points analyzed
        requirement_level: recommended
        examples: [100, 1000, 50000]
      
      - id: agent.analysis.sources
        type: string[]
        brief: Data sources used in analysis
        requirement_level: recommended
        examples: [["jira", "git", "ci_cd"], ["financial_system", "market_data"]]
      
      - id: agent.analysis.patterns_found
        type: int
        brief: Number of patterns identified
        requirement_level: optional
        examples: [3, 7, 15]
      
      - id: agent.analysis.insights
        type: string[]
        brief: Key insights from analysis
        requirement_level: required
        examples: [["velocity decreasing", "tech debt increasing"], ["market opportunity identified"]]

  # Agent Communication
  - id: agent.communication
    type: span
    brief: AI agent communicating with other agents
    extends: agent.ai
    attributes:
      - id: agent.communication.recipient
        type: string
        brief: Target agent or broadcast
        requirement_level: required
        examples: ["agent-cpo-001", "all", "sos-team-001"]
      
      - id: agent.communication.intent
        type:
          allow_custom_values: true
          members:
            - id: inform
              value: "inform"
              brief: Sharing information
            - id: request
              value: "request"
              brief: Requesting action or information
            - id: propose
              value: "propose"
              brief: Proposing a solution
            - id: debate
              value: "debate"
              brief: Debating or challenging
            - id: agree
              value: "agree"
              brief: Agreeing with proposal
            - id: disagree
              value: "disagree"
              brief: Disagreeing with proposal
        brief: Intent of the communication
        requirement_level: required
      
      - id: agent.communication.urgency
        type:
          allow_custom_values: false
          members:
            - id: low
              value: "low"
              brief: Can wait
            - id: normal
              value: "normal"
              brief: Standard priority
            - id: high
              value: "high"
              brief: Needs attention soon
            - id: critical
              value: "critical"
              brief: Immediate attention required
        brief: Urgency level of communication
        requirement_level: required
      
      - id: agent.communication.context_tokens
        type: int
        brief: Number of context tokens provided
        requirement_level: optional
        examples: [500, 2000, 8000]

  # Agent Learning
  - id: agent.learning
    type: span
    brief: AI agent learning from experience
    attributes:
      - id: agent.learning.type
        type:
          allow_custom_values: false
          members:
            - id: pattern
              value: "pattern"
              brief: Learning from patterns
            - id: feedback
              value: "feedback"
              brief: Learning from feedback
            - id: outcome
              value: "outcome"
              brief: Learning from outcomes
            - id: collaboration
              value: "collaboration"
              brief: Learning from other agents
        brief: Type of learning occurring
        requirement_level: required
      
      - id: agent.learning.examples_processed
        type: int
        brief: Number of examples processed
        requirement_level: required
        examples: [10, 100, 1000]
      
      - id: agent.learning.improvement_delta
        type: double
        brief: Measured improvement (percentage)
        requirement_level: optional
        examples: [5.2, 15.7, 0.3]
      
      - id: agent.learning.knowledge_updated
        type: boolean
        brief: Whether agent's knowledge base was updated
        requirement_level: required

  # Executive Agent Specialization
  - id: agent.executive
    type: attribute_group
    brief: Executive-level AI agent attributes
    attributes:
      - id: agent.executive.portfolio_value
        type: double
        brief: Portfolio value under management (millions)
        requirement_level: required
        examples: [100.0, 1200.0, 5000.0]
      
      - id: agent.executive.decision_authority
        type: string
        brief: Level of decision authority
        requirement_level: required
        examples: ["up_to_10M", "up_to_50M", "unlimited"]
      
      - id: agent.executive.strategic_focus
        type: string[]
        brief: Current strategic focus areas
        requirement_level: recommended
        examples: [["growth", "efficiency", "innovation"]]

  # Scrum Master Agent Specialization
  - id: agent.scrum_master
    type: attribute_group
    brief: Scrum Master AI agent attributes
    attributes:
      - id: agent.scrum_master.teams_facilitated
        type: int
        brief: Number of teams being facilitated
        requirement_level: required
        examples: [1, 3, 5]
      
      - id: agent.scrum_master.impediments_resolved
        type: int
        brief: Impediments resolved this sprint
        requirement_level: recommended
        examples: [5, 12, 20]
      
      - id: agent.scrum_master.facilitation_style
        type: string
        brief: Facilitation approach
        requirement_level: optional
        examples: ["servant_leader", "coach", "facilitator"]

  # Agent Output Types (for Pydantic AI)
  - id: agent.output
    type: attribute_group
    brief: Structured output types for agent responses
    attributes:
      - id: agent.output.decision
        type: template[string]
        brief: Decision output structure
        requirement_level: required
        examples: [{"decision": "approve", "reasoning": "ROI positive", "confidence": 0.9}]
      
      - id: agent.output.analysis
        type: template[string]
        brief: Analysis output structure
        requirement_level: required
        examples: [{"insights": ["pattern_1", "pattern_2"], "recommendations": ["action_1"]}]
      
      - id: agent.output.motion
        type: template[string]
        brief: Roberts Rules motion output
        requirement_level: required
        examples: [{"motion_text": "I move to...", "type": "main", "requires_second": true}]