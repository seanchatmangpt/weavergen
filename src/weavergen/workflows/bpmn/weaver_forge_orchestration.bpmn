<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL"
                  xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
                  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xmlns:weavergen="http://weavergen.ai/bpmn/extensions"
                  xmlns:camunda="http://camunda.org/schema/1.0/bpmn"
                  id="Definitions_WeaverForgeOrchestration"
                  targetNamespace="http://weavergen.ai/bpmn">
  
  <bpmn:process id="WeaverForgeOrchestration" name="Weaver Forge BPMN Orchestration" isExecutable="true">
    
    <!-- Start Event -->
    <bpmn:startEvent id="Start_WeaverForge" name="Start Weaver Forge">
      <bpmn:outgoing>Flow_WF1</bpmn:outgoing>
    </bpmn:startEvent>
    
    <!-- Initialize Weaver -->
    <bpmn:serviceTask id="Task_InitWeaver" name="Initialize Weaver Binary">
      <bpmn:documentation>Initialize OTel Weaver binary and verify installation</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:serviceTaskConfig>
          <weavergen:class>InitializeWeaverTask</weavergen:class>
          <weavergen:span>weaver.initialize</weavergen:span>
          <weavergen:critical>true</weavergen:critical>
        </weavergen:serviceTaskConfig>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_WF1</bpmn:incoming>
      <bpmn:outgoing>Flow_WF2</bpmn:outgoing>
    </bpmn:serviceTask>
    
    <!-- Load Semantic Registry -->
    <bpmn:serviceTask id="Task_LoadRegistry" name="Load Semantic Registry">
      <bpmn:documentation>Load semantic convention registry from URL or file</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:serviceTaskConfig>
          <weavergen:class>LoadSemanticRegistryTask</weavergen:class>
          <weavergen:span>weaver.load_registry</weavergen:span>
        </weavergen:serviceTaskConfig>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_WF2</bpmn:incoming>
      <bpmn:outgoing>Flow_WF3</bpmn:outgoing>
    </bpmn:serviceTask>
    
    <!-- Validate Registry -->
    <bpmn:serviceTask id="Task_ValidateRegistry" name="Validate Semantic Registry">
      <bpmn:documentation>Validate registry with Weaver check command</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:serviceTaskConfig>
          <weavergen:class>ValidateRegistryTask</weavergen:class>
          <weavergen:span>weaver.validate_registry</weavergen:span>
          <weavergen:weaverCommand>registry check</weavergen:weaverCommand>
        </weavergen:serviceTaskConfig>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_WF3</bpmn:incoming>
      <bpmn:outgoing>Flow_WF4</bpmn:outgoing>
    </bpmn:serviceTask>
    
    <!-- Decision: Language Selection -->
    <bpmn:exclusiveGateway id="Gateway_LanguageSelect" name="Select Target Language">
      <bpmn:incoming>Flow_WF4</bpmn:incoming>
      <bpmn:outgoing>Flow_Python</bpmn:outgoing>
      <bpmn:outgoing>Flow_Multi</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    
    <!-- Python Generation Path -->
    <bpmn:callActivity id="CallActivity_PythonGen" name="Generate Python Code" calledElement="PythonForgeGeneration">
      <bpmn:documentation>Generate Python code using Weaver Forge</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:span>weaver.generate.python</weavergen:span>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_Python</bpmn:incoming>
      <bpmn:outgoing>Flow_PythonDone</bpmn:outgoing>
    </bpmn:callActivity>
    
    <!-- Multi-Language Generation Path -->
    <bpmn:callActivity id="CallActivity_MultiGen" name="Generate Multi-Language" calledElement="MultiLanguageGeneration">
      <bpmn:documentation>Generate code for multiple languages in parallel</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:span>weaver.generate.multi</weavergen:span>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_Multi</bpmn:incoming>
      <bpmn:outgoing>Flow_MultiDone</bpmn:outgoing>
    </bpmn:callActivity>
    
    <!-- Merge paths -->
    <bpmn:exclusiveGateway id="Gateway_Merge" name="Merge Generation Paths">
      <bpmn:incoming>Flow_PythonDone</bpmn:incoming>
      <bpmn:incoming>Flow_MultiDone</bpmn:incoming>
      <bpmn:outgoing>Flow_WF5</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    
    <!-- Capture Generation Spans -->
    <bpmn:serviceTask id="Task_CaptureSpans" name="Capture Generation Spans">
      <bpmn:documentation>Capture all OTel spans from generation process</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:serviceTaskConfig>
          <weavergen:class>CaptureGenerationSpansTask</weavergen:class>
          <weavergen:span>weaver.capture_spans</weavergen:span>
        </weavergen:serviceTaskConfig>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_WF5</bpmn:incoming>
      <bpmn:outgoing>Flow_WF6</bpmn:outgoing>
    </bpmn:serviceTask>
    
    <!-- Validate Generated Code -->
    <bpmn:serviceTask id="Task_ValidateCode" name="Validate Generated Code">
      <bpmn:documentation>Validate generated code with span-based validation</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:serviceTaskConfig>
          <weavergen:class>ValidateGeneratedCodeTask</weavergen:class>
          <weavergen:span>weaver.validate_code</weavergen:span>
        </weavergen:serviceTaskConfig>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_WF6</bpmn:incoming>
      <bpmn:outgoing>Flow_WF7</bpmn:outgoing>
    </bpmn:serviceTask>
    
    <!-- Generate Span Report -->
    <bpmn:serviceTask id="Task_SpanReport" name="Generate Span Report">
      <bpmn:documentation>Generate comprehensive span-based report</bpmn:documentation>
      <bpmn:extensionElements>
        <weavergen:serviceTaskConfig>
          <weavergen:class>GenerateSpanReportTask</weavergen:class>
          <weavergen:span>weaver.span_report</weavergen:span>
        </weavergen:serviceTaskConfig>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_WF7</bpmn:incoming>
      <bpmn:outgoing>Flow_WF8</bpmn:outgoing>
    </bpmn:serviceTask>
    
    <!-- End Event -->
    <bpmn:endEvent id="End_WeaverForge" name="Weaver Forge Complete">
      <bpmn:incoming>Flow_WF8</bpmn:incoming>
    </bpmn:endEvent>
    
    <!-- Sequence Flows -->
    <bpmn:sequenceFlow id="Flow_WF1" sourceRef="Start_WeaverForge" targetRef="Task_InitWeaver"/>
    <bpmn:sequenceFlow id="Flow_WF2" sourceRef="Task_InitWeaver" targetRef="Task_LoadRegistry"/>
    <bpmn:sequenceFlow id="Flow_WF3" sourceRef="Task_LoadRegistry" targetRef="Task_ValidateRegistry"/>
    <bpmn:sequenceFlow id="Flow_WF4" sourceRef="Task_ValidateRegistry" targetRef="Gateway_LanguageSelect"/>
    <bpmn:sequenceFlow id="Flow_Python" sourceRef="Gateway_LanguageSelect" targetRef="CallActivity_PythonGen">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">language == "python"</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_Multi" sourceRef="Gateway_LanguageSelect" targetRef="CallActivity_MultiGen">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">language == "multi"</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_PythonDone" sourceRef="CallActivity_PythonGen" targetRef="Gateway_Merge"/>
    <bpmn:sequenceFlow id="Flow_MultiDone" sourceRef="CallActivity_MultiGen" targetRef="Gateway_Merge"/>
    <bpmn:sequenceFlow id="Flow_WF5" sourceRef="Gateway_Merge" targetRef="Task_CaptureSpans"/>
    <bpmn:sequenceFlow id="Flow_WF6" sourceRef="Task_CaptureSpans" targetRef="Task_ValidateCode"/>
    <bpmn:sequenceFlow id="Flow_WF7" sourceRef="Task_ValidateCode" targetRef="Task_SpanReport"/>
    <bpmn:sequenceFlow id="Flow_WF8" sourceRef="Task_SpanReport" targetRef="End_WeaverForge"/>
    
  </bpmn:process>
  
  <!-- Collaboration Diagram -->
  <bpmn:collaboration id="Collaboration_WeaverForge">
    <bpmn:participant id="Participant_WeaverForge" name="Weaver Forge System" processRef="WeaverForgeOrchestration"/>
    <bpmn:participant id="Participant_Weaver" name="OTel Weaver Binary"/>
    <bpmn:participant id="Participant_Registry" name="Semantic Registry"/>
    
    <bpmn:messageFlow id="MessageFlow_1" sourceRef="Task_InitWeaver" targetRef="Participant_Weaver"/>
    <bpmn:messageFlow id="MessageFlow_2" sourceRef="Task_LoadRegistry" targetRef="Participant_Registry"/>
    <bpmn:messageFlow id="MessageFlow_3" sourceRef="Task_ValidateRegistry" targetRef="Participant_Weaver"/>
  </bpmn:collaboration>
  
</bpmn:definitions>